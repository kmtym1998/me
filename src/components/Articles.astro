---
import articlesData from '../articlesConfig/config.json';
import { getPageOGPMetadata } from '../articlesConfig/getOGPMetadata';
import type { Metadata } from '../articlesConfig/type';
import { ArticleCard } from './ArticleCard';

type ArticleConfig = {
  items: Item[];
  type: 'article';
};

type Item = {
  source: string;
  articles: Article[];
};

type Article = {
  href: string;
  publishedDate: string;
};

type ReadArticleMetadataResult = {
  article: Article;
  metadata: Metadata;
};

const listArticleMetadata = async (): Promise<ReadArticleMetadataResult[]> => {
  const articleConfig = articlesData as ArticleConfig;

  const flattenArticles: Article[] = [];
  articleConfig.items.forEach((item) => {
    item.articles.forEach((article) => {
      flattenArticles.push(article);
    });
  });

  const responses = await Promise.allSettled(
    flattenArticles.map(async (item) => {
      const metadata = await getPageOGPMetadata(item.href);
      return {
        article: item,
        metadata,
      };
    }),
  );

  const metadataList: ReadArticleMetadataResult[] = [];
  responses.forEach((resp) => {
    if (resp.status == 'fulfilled') {
      metadataList.push(resp.value);
    }
  });

  return metadataList;
};

const readMetadataResults = await listArticleMetadata();
const sortedReadMetadataResults = readMetadataResults.sort((a, b) => {
  const dateA = new Date(a.article.publishedDate);
  const dateB = new Date(b.article.publishedDate);

  return dateB.getTime() - dateA.getTime();
});
---

<div class="cardContainer">
  {
    sortedReadMetadataResults.map((item) => {
      return (
        <div class="card">
          <ArticleCard
            metadata={item.metadata}
            date={item.article.publishedDate}
            bodyStyle={{
              paddingTop: 20,
              paddingLeft: 8,
              paddingRight: 8,
              textOverflow: 'ellipsis',
              whiteSpace: 'nowrap',
              maxWidth: '100%',
              overflow: 'hidden',
              fontSize: '0.8735804647362989em',
            }}
          />
        </div>
      );
    })
  }
</div>

<style>
  .cardContainer {
    display: -webkit-flex;
    display: -moz-flex;
    display: -ms-flex;
    display: -o-flex;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
  }
  .card {
    max-width: 500px;
    margin: 5px 0;
  }

  @media (max-width: 750px) {
    .card {
      width: 95%;
    }
  }
  @media (min-width: 750px) {
    .card {
      width: 49%;
    }
  }
</style>
